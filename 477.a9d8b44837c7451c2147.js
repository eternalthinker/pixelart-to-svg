(()=>{"use strict";function e(e){return e.toString(16).padStart(2,"0")}function t(t,a,s){return"#"+e(t)+e(a)+e(s)}onmessage=async e=>{try{await async function(e){const{canvas:a,pixelImg:s,spriteConfig:i}=e,{pixelsPerUnit:n,width:l,height:o,padding:r,outputPixelSize:g,spriteNames:p}=i,c=a.getContext("2d",{willReadFrequently:!0,antialias:!1});c.drawImage(s,0,0);const d=a.width,f=a.height,h=(l+2*r)*n,u=(o+2*r)*n,y=Math.floor(f/u),m=Math.floor(d/h),w=y*m;postMessage({type:"info",message:`We have ${w} images in ${y} rows and ${m} columns`});let x=1;for(let e=0;e<y;++e)for(let a=0;a<m;++a){let s=`image${x}`;p.length>x-1&&(s=p[x-1]);const i={filename:s,padding:r*g,w:l*g,h:o*g,pixels:[]};let d;if(r>0){d=c.getImageData(h*a,u*e,1,1).data;const s=t(d[0],d[1],d[2]);i.background={fill:s,x:0,y:0,w:(l+2*r)*g,h:(o+2*r)*g},i.guide={mask:[{x:(r-1)*g,y:(r-1)*g,w:(l+2)*g,h:(o+2)*g,fill:"#3F3F3F"},{x:r*g,y:r*g,w:l*g,h:l*g,fill:"#000000"}],masked:{x:(r-1)*g,y:(r-1)*g,w:(l+2)*g,h:(o+2)*g,fill:"#000000"}}}for(let s=0;s<o;++s)for(let o=0;o<l;++o){const l=h*a+(o+r)*n,p=u*e+(s+r)*n,f=c.getImageData(l,p,1,1).data,y=f[3]/255;if($=d,null!=(M=f)&&null!=$&&M[0]===$[0]&&M[1]===$[1]&&M[2]===$[2]||0===y)continue;const m=t(f[0],f[1],f[2]);i.pixels.push({fill:m,opacity:y,x:o*g,y:s*g,w:g,h:g})}postMessage({type:"progress",details:`${x}/${w}`,svgData:i}),x+=1}var M,$}(e.data),postMessage({type:"end"})}catch(e){postMessage({type:"error",error:e})}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,